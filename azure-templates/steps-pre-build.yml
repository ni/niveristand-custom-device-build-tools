parameters:
  - name: lvVersionToBuild
    type: object
  - name: releaseVersion
    type: string
  - name: archiveLocation
    type: string
  - name: buildOutputLocation
    type: string
  - name: codegenVis
    type: object
  - name: submodules
    type: boolean

steps:
    # Variables that are set in a powershell script cannot be used within the same script
    # because the variables are resolved when the script is first loaded, so generate all
    # variables at the beginning.
  - task: PowerShell@2
    displayName: Configure Job-wide Variables for LabVIEW ${{ parameters.lvVersionToBuild.version }} ${{ parameters.lvVersionToBuild.bitness }}
    inputs:
      targetType: 'filePath'
      filePath: 'niveristand-custom-device-build-tools/powershell-scripts/define-build-variables.ps1'
      failOnStdErr: True

  - powershell: Write-Host '##vso[task.setvariable variable=lvCLICall]LabVIEWCLI -PortNumber 3363 -LabVIEWPath "$(lvPath)\LabVIEW.exe" -AdditionalOperationDirectory "%cd%\$(buildTools)\lv\operations"'
    displayName: Set LabVIEWCLI path

  - checkout: niveristand-custom-device-build-tools
    displayName: Check out NI VS Custom Device Build Tools repository

    # The checkout order doesn't matter in most cases, but we want the dev branch (self) to be checked out last so that it's used for PR builds in niveristand-custom-device-build-tools
  - checkout: self
    displayName: Check out repository to build with submodules
    submodules: ${{ parameters.submodules }}

  - task: CmdLine@2
    displayName: Clear compiled cache for LabVIEW ${{ parameters.lvVersionToBuild.version }}
    inputs:
      script: |
        echo on
        $(lvCLICall) ^
          -OperationName "SecureRunVI" ^
          -VIPath "$(workspaceDirectory)\$(buildTools)\lv\operations\Utilities\ClearCache.vi" ^
          -LogFilePath "$(workspaceDirectory)\$(customDeviceRepoName)\lvClearCache.log"

  - ${{ each codegenVi in parameters.codegenVis }}:
    - ${{ if ne(codegenVi, '' )}}:
      - task: CmdLine@2
        displayName: Run codegen step ${{ codegenVi }}
        inputs:
          script: |
            echo on
            $(lvCLICall) ^
              -OperationName "SecureRunVI" ^
              -VIPath "$(workspaceDirectory)\$(customDeviceRepoName)\${{ codegenVi }}" ^
              -LogFilePath "$(workspaceDirectory)\$(customDeviceRepoName)\lvCodegen.log"