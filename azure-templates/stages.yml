parameters:
  - name: stageName
    type: string
    default: Build

  - name: disableDiff
    type: boolean
    default: false

  - name: enableVirtualPackages
    type: boolean
    default: false

  - name: silenceDependencyFailures
    type: boolean
    default: false

  - name: pool
    type: string
    default: DevCentral-VeriStand-CustomDevices

  # lvVersiontoDiff (optional): 64-bit LabVIEW version for VI diff
  - name: lvVersionToDiff
    type: string
    default: '2023'

  # lvVersionsToBuild (optional): list of {version, bitness}
  - name: lvVersionsToBuild
    type: object
    default:
      - version: '2020'
        bitness: '32bit'
      - version: '2021'
        bitness: '64bit'
      - version: '2023'
        bitness: '64bit'

  # codegenVis (optional): string array of codegen VI paths
  - name: codegenVis
    type: object
    default:
      - ''

  # dependencies (optional): list of {source, file, destination}
  - name: dependencies
    type: object
    default:
      - file: ''

  # buildSteps (optional): list of {projectLocation, buildOperation, target, buildSpec}
  - name: buildSteps
    type: object
    default: ''

  # packages (optional): list of {controlFileName, payloadMaps: list of {payloadLocation, installLocation} }
  - name: packages
    type: object
    default:
      - controlFileName: ''

  # submodules (optional): boolean of whether to use submodules
  - name: submodules
    type: boolean
    default: false

  # strings (releaseVersion, quarterlyReleaseVersion, buildOutputLocation, archiveLocation)
  - name: releaseVersion
    type: string
  - name: buildOutputLocation
    type: string
  - name: archiveLocation
    type: string

# Note: If custom build steps are needed for a particular custom device, copy this entire template into the azure-pipeline and add steps before/after as needed
stages:
  - stage: ${{ parameters.stageName }}_DiffVIs
    dependsOn: []
    condition: and(eq(variables['Build.Reason'], 'PullRequest'), eq('${{ parameters.disableDiff }}', false))
    pool:
      name: ${{ parameters.pool }}
      demands: VeriStand${{ parameters.lvVersionToDiff }}
    jobs:
      - job: DiffVIsforPR
        displayName: Diff VIs for PR
        variables:
          - group: niveristand-custom-devices
        steps:
          - template: steps-prepare.yml
            parameters:
              build: False
              clearCache: False
          - template: steps-diff.yml
            parameters:
              lvVersionToDiff: ${{ parameters.lvVersionToDiff }}

  - stage: ${{ parameters.stageName }}
    dependsOn: []
    variables:
      ${{ if ne(variables['Build.Reason'], 'PullRequest')}}:
        CD.BuildCounter: $[counter(format('custom {0}', variables['Build.SourceBranch']), 1)]
      ${{ if eq(variables['Build.Reason'], 'PullRequest')}}:
        CD.BuildCounter: "9999"
    pool:
      name: ${{ parameters.pool }}
    jobs:
        # Build Jobs
      - ${{ each item in parameters.lvVersionsToBuild }}:
        - job: Job_Build_${{ item.version }}_${{ item.bitness }}
          pool:
            name: ${{ parameters.pool }}
            demands: VeriStand${{ item.version }}
          displayName: Build LabVIEW ${{ item.version }} ${{ item.bitness }}
          timeoutInMinutes: 120
          steps:
            - template: steps-prepare.yml
              parameters:
                lvVersion:           ${{ item.version }}
                bitness:             ${{ item.bitness }}
                releaseVersion:      ${{ parameters.releaseVersion }}
                archiveLocation:     ${{ parameters.archiveLocation }}
                buildOutputLocation: ${{ parameters.buildOutputLocation }}
                codegenVis:          ${{ parameters.codegenVis }}
                submodules:          ${{ parameters.submodules }}

            - ${{ if ne( parameters.buildSteps, '' )}}:
              - ${{ each buildStep in parameters.buildSteps }}:
                  - template: steps-build.yml
                    parameters:
                      buildStep:                 ${{ buildStep }}
                      dependencies:              ${{ parameters.dependencies }}
                      lvVersionToBuild:          ${{ item }}
                      silenceDependencyFailures: ${{ parameters.silenceDependencyFailures }}

            - task: PowerShell@2
              displayName: Copy built files to Archive location
              inputs:
                targetType: 'filePath'
                filePath: 'niveristand-custom-device-build-tools/azure-templates/powershell-scripts/archive-build.ps1'
                failOnStdErr: True

        # Packaging Jobs
      - job: Job_Package_All
        dependsOn:
          - ${{ each item in parameters.lvVersionsToBuild }}:
            - Job_Build_${{ item.version }}_${{ item.bitness }}
        displayName: Package Installers
        variables: 
          CD.Package.Finished: ""
        steps:
          - ${{ each item in parameters.lvVersionsToBuild }}:
            - template: steps-prepare.yml
              parameters:
                  lvVersion:           ${{ item.version }}
                  bitness:             ${{ item.bitness }}
                  releaseVersion:      ${{ parameters.releaseVersion }}
                  archiveLocation:     ${{ parameters.archiveLocation }}
                  buildOutputLocation: ${{ parameters.buildOutputLocation }}
                  clearCache:          False

            - template: steps-packaging.yml
              parameters:
                lvVersion: ${{ item.version }}
                packages:  ${{ parameters.packages }}

        # Finalization: if all jobs have passed, place .finished file in top level archive location
      - job: Finalize
        displayName: Final Validation
        dependsOn:
          - Job_Package_All
        condition: succeeded()
        steps:
        - template: steps-prepare.yml
          parameters:
            archiveLocation: ${{ parameters.archiveLocation }}
            build: False
            clearCache: False

        - task: PowerShell@2
          displayName: Compare package contents to last successful build in main
          inputs:
            targetType: 'filePath'
            filePath: 'niveristand-custom-device-build-tools/azure-templates/powershell-scripts/check-count-size.ps1'
            failOnStdErr: True
            arguments: > # $$ is used in an argument to pass in a boolean, which requires a $ at the beginning
              -archiveDir "${{ parameters.archiveLocation }}"
              -virtualPackages $${{ parameters.enableVirtualPackages }}

        - task: PowerShell@2
          displayName: Add .finished to directory
          inputs:
            targetType: 'filePath'
            filePath: 'niveristand-custom-device-build-tools/azure-templates/powershell-scripts/finalization.ps1'
            failOnStdErr: True