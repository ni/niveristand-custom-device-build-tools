parameters:
  - name: buildOutputLocation
    type: string
  - name: nipkgInstallLocation
    type: string
  - name: archiveLocation
    type: string
  - name: pack
    type: boolean
    default: false

steps:
###########  Archive  ###########
  - ${{ if eq( parameters.pack, true )}}:
    - powershell: Write-Host '##vso[task.setvariable variable=nipkgPath]$(customDeviceRepoName)\nipkg'
      displayName: Set nipkg path variable
    - powershell: |
        If (Test-Path '$(nipkgPath)') { Remove-Item -Path '$(nipkgPath)' -Recurse -Force }
        New-Item -Path '$(nipkgPath)' -Name 'control' -ItemType 'Directory'
        New-Item -Path '$(nipkgPath)' -Name 'data' -ItemType 'Directory'
        New-Item -Path '$(nipkgPath)' -Name 'debian-binary' -ItemType 'File'
        Set-Content '$(nipkgPath)\debian-binary' '2.0\n'
        Copy-Item `
        -Path '$(customDeviceRepoName)\control' `
        -Destination '$(nipkgPath)\control'
        Copy-Item `
        -Path '$(customDeviceRepoName)\${{ parameters.buildOutputLocation }}\*' `
        -Destination '$(nipkgPath)\data\${{ parameters.nipkgInstallLocation }}\'
      displayName: Stage nipkg directory
    - powershell: |
        $controlContents = Get-Content -Path '$(nipkgPath)\control\control'
        $controlContents = $controlContents -replace '{veristand_version}', '$(lvVersion)'
        $controlContents = $controlContents -replace '{labview_version}', '$(lvVersion)'
        $controlContents = $controlContents -replace '{nipkg_version}', '$(releaseVersion)'
        $controlContents = $controlContents -replace '{display_version}', '$(releaseVersion)'
        $controlContents = $controlContents -replace '{quarterly_display_version}', '$(quarterlyReleaseVersion)'
        $controlContents = $controlContents -replace '{labview_short_version}', '$(shortLvVersion)'
        Set-Content -Value $controlContents -Path '$(nipkgPath)\control\control'
      displayName: Update nipkg control version parameters
    - script: '"%PROGRAMFILES%\National Instruments\NI Package Manager\nipkg.exe" pack "$(nipkgPath)" "$(nipkgPath)"'
      displayName: Pack nipkg
    - powershell: |
        Copy-Item `
        -Path '$(nipkgPath)\*' `
        -Destination '$(customDeviceRepoName)\${{ parameters.buildOutputLocation }}\installer' `
        -Filter *.nipkg `
        -Recurse `
        -Verbose
      displayName: Copy installer to build output location
  - powershell: |
      Copy-Item `
      -Path '$(customDeviceRepoName)\${{ parameters.buildOutputLocation }}\*' `
      -Destination '${{ parameters.archiveLocation }}\NI\export\$(Build.SourceBranchName)\$(Build.BuildId)\$(lvVersion)\$(architecture)\' `
      -Recurse
    displayName: Copying built files to nirvana Archive